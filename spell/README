"How to Write a Spell Corrector" in C

See the original post for python here: http://norvig.com/spell-correct.html

January 25, 2012
Steve A

I've written a spell corrector in C with two different backends.  

One with a trie structure and one using a dictionary (hash table).

To compile just do:

gcc -o spell_trie spell.c trie.c

gcc -o spell_dict spell.c dict.c fnv_hash.h

My goals in order of priority were:

 1.) write a spell corrector in C
 2.) use as few dependencies as possible
 3.) no tuning required
 4.) make it about as much memory as the size of big.txt (6.5M).
 5.) make it at least twice as fast as python.
 6.) keep the code style consistent with Norvig's design.

I wrote a spell corrector program with two different backends:
a trie and a dict (hash table).  I made the dict mainly for comparison sake.

I failed goal #6. spell.c on its own is 160 lines. This was a naive goal.

The dict failed goal #3, but the trie achieved it!
The dict failed mainly having to do with my laziness.
Though my naive dict implementation worked well when tuned right.

I found trie's to be very flexible.  One interesting fact is that
traverse_map in trie.c traverses the map in sorted order in O(N). So
it'd be nearly trivial to base a simple sort program off trie.c.

Trie's were half the speed of a perfectly tuned dict. Both ran in less
than one second. By run I  mean loading big.txt into a trie or dict and 
correcting a single word.  trie.c was about double the speed of python.
So dict.c was 4x the speed of python. A poorly tuned dict could be
exceptionally slow since it uses open addressing. 

Interestingly the trie used only about 4M of memory, using less than
the big.txt file which took up 6M. Python used 100M. and dict varied
depending on the tuning, though around 10M.

Further Reseearch

While 4M is impressive, I imagine tries could use a lot less memory
if you could stop them from using all those damn 8-byte pointers.
Perhaps you could try writing your own allocator and referencing system
which could grow and shrink as the elements in the trie universe
changes.  Definitely something fun to think about.

-Steve A
